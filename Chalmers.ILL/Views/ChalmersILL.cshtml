@inherits Umbraco.Web.Mvc.UmbracoViewPage<Chalmers.ILL.Models.Page.ChalmersILLModel>
@using Examine
@using Examine.SearchCriteria
@using UmbracoExamine
@using System.Configuration;
@{
    Layout = null;
}

@{
    var isNotLocalhost = Request.ServerVariables["SERVER_NAME"] != "localhost";
    var isNotTestServer = Request.ServerVariables["SERVER_NAME"] != ConfigurationManager.AppSettings["testServer"];
    var isNotSecureLiveServer = !(Request.ServerVariables["SERVER_PORT_SECURE"] == "1" && Request.ServerVariables["SERVER_NAME"] == ConfigurationManager.AppSettings["liveServer"]);
    if (isNotLocalhost && isNotTestServer && isNotSecureLiveServer)
    {
        Response.RedirectPermanent("https://" + ConfigurationManager.AppSettings["liveServer"]);
    }
}

<!doctype html>
<html>
	<head>
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
		<title>Chalmers fjärrlån &amp; bokförvärv</title>
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link rel="stylesheet" href="/bower_components/bootstrap/dist/css/bootstrap.min.css">
        <link rel="stylesheet" href="/css/chalmers.ill.main.css?r=@DateTime.Now.Ticks" media="screen">
        <link rel="stylesheet" href="/css/chalmers.ill.print.css?r=@DateTime.Now.Ticks" media="print">
        <link rel="stylesheet" href="/bower_components/eonasdan-bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.min.css" />
        <link rel="stylesheet" href="/bower_components/bootstrap-markdown/css/bootstrap-markdown.min.css" />
        <script src="/bower_components/jquery/dist/jquery.min.js"></script>
        <script src="/bower_components/moment/min/moment-with-locales.min.js"></script>
        <script src="/bower_components/eonasdan-bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min.js"></script>
        <script src="/bower_components/Snap.svg/dist/snap.svg-min.js"></script>
        @if (!System.Web.Security.Roles.IsUserInRole(Model.CurrentMemberLoginName, "Administrator"))
        {
            <style>
                .editmode .btn {
                    display:none; // Hide buttons for non admin account, cosmetic fix only
                }

                a[href="/bestaellningar/instaellningar/"] {
                    display: none !important; // Hide settings for non admin account, cosmetic fix only
                }
            </style>
        }
    </head>
	<body>
        <div id="container">
            @{
                if (Convert.ToBoolean(ConfigurationManager.AppSettings["showManulMailFetchingTools"]))
                {
                    <img style="position:fixed; left:10px; bottom:10px;" src="~/images/chilli-plain.svg" onclick="lockScreen(); $.post('/umbraco/surface/SystemSurface/Update', {}, unlockScreen);" onerror="    onerror=null; this.src='~/images/chilli.png'" alt="Chilli">
                }
            }

            <div id="lockscreen">
                <svg id="chilli" viewBox="0 0 100 100"></svg>
            </div>
            <nav class="navbar navbar-inverse navbar-fixed-top" role="navigation">
                <!-- Brand and toggle get grouped for better mobile display -->
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
                        <span class="sr-only">Toggle navigation</span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                    <a id="main-brand-title" style="padding-top: 5px; padding-bottom: 0px;" class="navbar-brand" href="@Umbraco.TypedContentAtXPath("//" + ConfigurationManager.AppSettings["umbracoRootContentDocumentType"]).First().Url">
                        <img id="busylock" src="~/images/lock-plain.svg" onerror="onerror=null; this.src='~/images/lock.png'" alt="Busy Lock">
                        <img src="~/images/chilli-plain.svg" onerror="onerror=null; this.src='~/images/chilli.png'" alt="Chilli">
                    </a>
                </div>

                <!-- Collect the nav links, forms, and other content for toggling -->
                <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
                    <ul class="nav navbar-nav">
                        <li id="orders-button" class="@(Model.Content.Url == Umbraco.TypedContentAtXPath("//" + ConfigurationManager.AppSettings["umbracoOrderListPageContentDocumentType"]).First().Url ? "active" : null)"><a href="@Umbraco.TypedContentAtXPath("//" + ConfigurationManager.AppSettings["umbracoOrderListPageContentDocumentType"]).First().Url">Beställningar <span id="pending-order-counter" class="badge" data-pending-order-items="[]">0</span></a></li>
                        <li style="margin-left: 10px; margin-top: 8px;"><button id='send-feedback-button' class="btn btn-default" type="button" data-toggle="popover" data-content="<form name='feedback-form' onsubmit='sendFeedback(); event.preventDefault();'><h3>Lämna feedback</h3><textarea id='feedback-text' style='resize: none;' rows='5'></textarea><button style='width: 100%;' type='submit' class='btn btn-default'>Skicka</button></form>"><span class="glyphicon glyphicon-bullhorn"></span></button></li>
                    </ul>

                    <!-- Search form -->
                    <form class="navbar-form navbar-left" role="search" action="@Umbraco.TypedContentAtXPath("//" + ConfigurationManager.AppSettings["umbracoOrderListPageContentDocumentType"]).First().Url">
                        <div class="form-group">
                            <input type="text" class="form-control" name="query" id="query" value="@Request.Params["query"]" placeholder="Namn, referens mm" oninput="correctSearchString()">
                        </div>
                        <div class="btn-group">
                            <button type="submit" class="btn btn-default">Sök</button>
                            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <span class="caret"></span>
                                <span class="sr-only">Toggle Dropdown</span>
                            </button>
                            <ul class="dropdown-menu">
                                <li><a href='?query=status:"15:Förlorad?"'>Ordrar med status <span class="order-item-status label label-danger">Förlorad?</span></a></li>
                            </ul>
                        </div>
                    </form>

                    <!-- Logged in Member info and links -->
                    @if (library.IsLoggedOn())
                    {
                        <div id="memberIdContainer" data-memberid="@Model.CurrentMemberId"></div>
                        <ul class="nav navbar-nav navbar-right">
                            <li>
                                <a class="image-link" href="@Umbraco.TypedContentAtXPath("//" + ConfigurationManager.AppSettings["umbracoRootContentDocumentType"]).First().Url">
                                    <img id="help-icon" src="~/images/help.svg" onerror="onerror=null; this.src='~/images/help.png'" alt="Busy Lock">
                                </a>
                            </li>
                            <li class="dropdown">
                                <a href="#" class="dropdown-toggle" data-toggle="dropdown">@Model.CurrentMemberText <b class="caret"></b></a>
                                <ul class="dropdown-menu">
                                    <li><a href="@Umbraco.TypedContentAtXPath("//" + ConfigurationManager.AppSettings["umbracoRootContentDocumentType"]).First().Url">Hjälp</a></li>
                                    <li><a href="@Umbraco.TypedContentAtXPath("//" + ConfigurationManager.AppSettings["umbracoSettingsPageContentDocumentType"]).First().Url">Inställningar</a></li>
                                    <li><a href="@ConfigurationManager.AppSettings["statisticsUrl"]">Statistik</a></li>
                                    <li><a href="@Umbraco.TypedContentAtXPath("//" + ConfigurationManager.AppSettings["umbracoLogoutPageContentDocumentType"]).First().Url">Logga ut</a></li>
                                </ul>
                            </li>
                        </ul>
                    }

                </div><!-- /.navbar-collapse -->
            </nav>

            <!-- SignalR Alert Section (not in use) -->
            <!-- <div class="alerts"></div> -->
            @RenderBody()

            @{
                if (Request.Params["debug"] == "1")
                {
            <!-- Debug Bucket -->
                    <div id="debug-bucket" class="panel panel-default">
                        <div class="panel-heading">Meddelanden (används vid felsökning)</div>
                        <div class="panel-body">
                        </div>
                    </div>
                }
            }
        </div>
        <!-- Load Boostrap at the end to first get all content loaded -->
        <script src="/bower_components/bootstrap/dist/js/bootstrap.min.js"></script>

        <!-- Load bootstrap-markdown and dependencies-->
        <script src="/bower_components/markdown/lib/markdown.js"></script>
        <script src="/bower_components/bootstrap-markdown/js/bootstrap-markdown.js"></script>


        <!-- SignalR related scripts -->
        <script src="/bower_components/signalr/jquery.signalR.min.js" type="text/javascript"></script>
        <script src="/signalr/hubs" type="text/javascript"></script>

        <!-- Custom Javascript for this app -->
        <script src="/scripts/chalmers.ill.js?r=@DateTime.Now.Ticks" type="text/javascript"></script>

        <script type="text/javascript">
    $(function () {
        // Start a timer for when we should update all calculated time differences in the opened order.
        setInterval(function () {
            // Updates all dynamic time differences in the opened order.
            $(".dynamic-time-diff").each(function () {
                $(this).data("minutes", parseInt($(this).data("minutes")) + 1);
                $(this).text(getPrettyDateString($(this).data("minutes")));
            });
        }, 60 * 1000);

        $("[data-toggle='popover']").popover({
            trigger: "click",
            placement: "bottom",
            html: true
        });
    });

    function sendFeedback() {
        var message = $("#feedback-text").val() + "\n\n" + "/" + "@Model.CurrentMemberText";
        if (message.trim() !== "") {
            lockScreen();
            $.post("/umbraco/surface/OrderItemMailSurface/SendSimpleMail", {
                OrderId: "... Nej, FEEDBACK",
                recipientName: "Buggfixarna",
                recipientEmail: "@ConfigurationManager.AppSettings["bugFixersMailingList"]",
                message: message,
                attachments: []
            }).done(function (res) {
                if (!res.Success) {
                    alert(res.Message);
                }
                unlockScreen();
            }).fail(function (jqxhr, textStatus, error) {
                alert("Error: " + textStatus + " " + error);
                unlockScreen();
            });

            $("#send-feedback-button").popover("hide");
        }
    }

    // Look for things that look like Chillin IDs and make sure they look really correct.
    function correctSearchString() {
        var queryStr = $("#query").val();
        var regExp = /(cthb[+-][a-zA-Z0-9]{8}[+-][0-9]+)/g;
        var matches = regExp.exec(queryStr);

        for (var i = 1; i < matches.length; i++) {
            var originalStr = matches[i];
            var fixedStr = matches[i].replace(/\+/g, '-');
            queryStr = queryStr.replace(originalStr, fixedStr);
        }

        if ($("#query").val() !== queryStr) {
            $("#query").val(queryStr);
        }
    }
        </script>
</body>
</html>