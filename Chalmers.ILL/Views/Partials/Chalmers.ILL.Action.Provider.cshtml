@model Chalmers.ILL.Models.PartialPage.ChalmersILLActionProviderModel

<div class="action-header">Lägg en beställning</div>

<form class="form" role="form" onsubmit="return false;">
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label for="providerName">Leverantör</label>
                <input type="text" class="form-control" id="providerName" name="providerName" placeholder="Leverantörens namn" value="@Model.OrderItem.ProviderName">
                <div id="provider-list" class="list-group" style="height: 175px; overflow: auto; background: #ebebeb;">
                    @foreach (var providerName in Model.Providers)
                    {
                        <a href="#" onclick="$('#providerName').val($(this).text()); updateFollowUpDate($(this).text()); event.preventDefault();" class="list-group-item">@providerName</a>
                    }
                </div>
            </div>
            <div class="form-group">
                <label for="providerOrderId">Leverantörens order-id</label>
                <input type="text" class="form-control" id="providerOrderId" name="providerOrderId" placeholder="Beställningsnummer" value="@Model.OrderItem.ProviderOrderId">
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label for="providerInformation">Leverantörsinformation</label><br />
                <textarea class="form-control" cols="80" rows="10" id="providerInformation" name="providerInformation">@Model.OrderItem.ProviderInformation</textarea>
            </div>
            <div class="form-group" style="display: none;">
                <label for="followUpDate">Följs upp</label>
                <div class="input-group date datetimepicker">
                    <input type="text" class="form-control" id="followUpDate" name="followUpDate" value="@Model.EstimatedDeliveryCurrentProvider.ToString("yyyy-MM-dd HH:mm"))">
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <button id="set-order-item-provider-button" class="btn btn-success" onclick="setOrderItemProvider(@Model.OrderItem.NodeId, this.form.providerName.value, this.form.providerOrderId.value, this.form.providerInformation.value, this.form.followUpDate.value)">Genomför ny beställning</button>
                @if (!String.IsNullOrEmpty(Model.OrderItem.DeliveryLibrary))
                {
                <button id="set-order-item-provider-button" class="btn btn-success" onclick="setOrderItemProvider(@Model.OrderItem.NodeId, this.form.providerName.value, this.form.providerOrderId.value, this.form.providerInformation.value, this.form.followUpDate.value, false)">Spara leverantörsdata utan att ändra status</button>
                }
            </div>
        </div>
    </div>
    <script type="text/javascript">
        $(function () {
            $(".datetimepicker").datetimepicker({
                locale: "sv"
            });

            $("#providerName").keyup(function () {
                var providerNameInput = $(this);
                var re = new RegExp(providerNameInput.val(), "i");

                var updated = false;
                $("#provider-list > a").each(function () {
                    // Only show list elements if they match what is written in the text input.
                    $(this).toggle(re.test($(this).text()));

                    // If we have written the same word as already exists but with different case, substitute it with the existing case.
                    if (!updated && $(this).text().toLowerCase() === providerNameInput.val().toLowerCase()) {
                        providerNameInput.val($(this).text());
                        updated = true;
                    }
                });
            });
        });

        function updateFollowUpDate(providerName) {
            $("#set-order-item-provider-button").attr("disabled", "disabled");
            $.get("/umbraco/surface/ProviderDataSurface/GetDeliveryTimeInHoursForProvider", {
                providerName: providerName
            }).done(function (suggestedDeliveryTimeInHours) {
                $("#set-order-item-provider-button").removeAttr("disabled");
                var date = new Date("@DateTime.Now.ToString("yyyy-MM-ddTHH:mm:ss")");
                date.setTime(date.getTime() + (suggestedDeliveryTimeInHours * 60 * 60 * 1000));
                $("#followUpDate").val(getDateStringWithHoursAndMinutes(date));
            }).fail(function (jqxhr, textStatus, error) {
                alert("Error: " + textStatus + " " + error);
            });
        }
    </script>
</form>
