@model Chalmers.ILL.Models.PartialPage.Settings.ModifyProviderData

<div class="col-lg-12">
    <h3>Modifiera leverantörsdata på alla ordrar</h3>
</div>
<div class="col-md-6">
    <div class="form-group">
        <label for="providerName">Ändra från leverantörsnamn</label>
        <input type="text" class="form-control" id="from-provider-name" name="from-provider-name" placeholder="Leverantörens namn" value="">
        <div id="from-provider-list" class="list-group" style="height: 175px; overflow: auto; background: #ebebeb;">
            @foreach (var providerName in Model.Providers)
            {
                <a href="#" onclick="$('#from-provider-name').val($(this).text()); event.preventDefault();" class="list-group-item">@providerName</a>
            }
        </div>
    </div>
</div>
<div class="col-md-6">
    <div class="form-group">
        <label for="providerName">Ändra till leverantörsnamn</label>
        <input type="text" class="form-control" id="to-provider-name" name="to-provider-name" placeholder="Leverantörens namn" value="">
        <div id="to-provider-list" class="list-group" style="height: 175px; overflow: auto; background: #ebebeb;">
            @foreach (var providerName in Model.Providers)
            {
                <a href="#" onclick="$('#to-provider-name').val($(this).text()); event.preventDefault();" class="list-group-item">@providerName</a>
            }
        </div>
    </div>
</div>
<div class="col-md-6">
    <button class="btn btn-success" onclick="changeProviderNameOnAllOrderItems();">Ändra leverantörsnamn</button>
</div>

<script type="text/javascript">
    function changeProviderNameOnAllOrderItems() {
        var fromProviderName = $('#from-provider-name').val().trim();
        var toProviderName = $('#to-provider-name').val().trim();

        if (fromProviderName && toProviderName) {
            var res = window.confirm('Detta kommer nu att ändra ALLA ordrar som har leverantörsnamn \"' + fromProviderName + '\" så att de istället har leverantörsnamn \"' + toProviderName + '\".\n\nDessa ändringar går ej att ångra och är det många ordrar som ändringen berör kan det ta en stund och det kan påverka Chillins prestanda.\n\nÄr du säker på att du vill fortsätta?');
            if (res) {
                lockScreen();
                $.post("/umbraco/surface/ProviderDataSurface/ModifyProviderDataHistory", {
                    from: fromProviderName,
                    to: toProviderName
                }).done(function (json) {
                    alert(json.Message);
                    unlockScreen();
                    $("#provider-settings-link").click();
                }).fail(function (jqxhr, textStatus, error) {
                    alert("Error: " + textStatus + " " + error);
                    unlockScreen();
                });
            }
        }
    }

    $("#from-provider-name").keyup(function () {
        var providerNameInput = $(this);
        var re = new RegExp(providerNameInput.val(), "i");

        var updated = false;
        $("#from-provider-list > a").each(function () {
            // Only show list elements if they match what is written in the text input.
            $(this).toggle(re.test($(this).text()));

            // If we have written the same word as already exists but with different case, substitute it with the existing case.
            if (!updated && $(this).text().toLowerCase() === providerNameInput.val().toLowerCase()) {
                providerNameInput.val($(this).text());
                updated = true;
            }
        });
    });

    $("#to-provider-name").keyup(function () {
        var providerNameInput = $(this);
        var re = new RegExp(providerNameInput.val(), "i");

        var updated = false;
        $("#to-provider-list > a").each(function () {
            // Only show list elements if they match what is written in the text input.
            $(this).toggle(re.test($(this).text()));

            // If we have written the same word as already exists but with different case, substitute it with the existing case.
            if (!updated && $(this).text().toLowerCase() === providerNameInput.val().toLowerCase()) {
                providerNameInput.val($(this).text());
                updated = true;
            }
        });
    });
</script>