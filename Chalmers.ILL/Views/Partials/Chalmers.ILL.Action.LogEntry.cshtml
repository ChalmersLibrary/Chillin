@model Chalmers.ILL.Models.PartialPage.ChalmersILLActionLogEntryModel
@using System.Globalization;
@using Chalmers.ILL.Extensions;

<div class="action-header">Skriv till loggen</div>

<form class="form" role="form" onsubmit="return false;">
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label for="message">Inlägg</label>
                <textarea class="form-control" rows="6" id="message" name="message"></textarea>
            </div>
            <div class="form-group" style="@(String.IsNullOrWhiteSpace(Model.OrderItem.Type) ? "display: none;" : "")">
                <label for="followUpDate">Följs upp</label>
                <div class="input-group date datetimepicker">
                    <input type="text" class="form-control" id="followUpDate" name="followUpDate" value="@Model.OrderItem.FollowUpDate.ToString("yyyy-MM-dd HH:mm", CultureInfo.CurrentCulture)">
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
            </div>
            <div class="form-group" style="@(String.IsNullOrWhiteSpace(Model.OrderItem.Type) ? "display: none;" : "")">
                <label>Ny status</label>
                <!-- Status button -->
                <div>
                    <div class="btn-group">
                        <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">
                            <span id="currently-selected-status" data-status-id="-1" data-cancellation-reason-id="-1" data-purchased-material-id="-1">Ingen förändring</span> <span class="caret"></span>
                        </button>
                        <ul class="dropdown-menu" id="orderitem-statuslist" role="menu">
                            <li><a href="#" onclick="updateSelectedStatus(-1, 'Ingen förändring', -1, -1); event.preventDefault();">Ingen förändring</a></li>
                            @{
                                var allowedStatusValues = new String[] { "Annullerad", "Åtgärda", "Inköpt", "Väntar" };

                                foreach (var status in Model.AvailableStatuses)
                                {
                                    if (allowedStatusValues.Contains(status.Value))
                                    {
                                        if (status.Value == "Annullerad")
                                        {
                                            <li class="dropdown-submenu">
                                                <a>@status.Value</a>
                                                <ul class="dropdown-menu">
                                                    @foreach (var cancellationReason in Model.AvailableCancellationReasons)
                                                    {
                                                        <li><a href="#" onclick="updateSelectedStatus(@status.Id, '@status.Value -> @cancellationReason.Value', @cancellationReason.Id, -1); event.preventDefault();">@cancellationReason.Value</a></li>
                                                    }
                                                </ul>
                                            </li>
                                        }
                                        else if (status.Value == "Inköpt")
                                        {
                                            <li class="dropdown-submenu">
                                                <a>@status.Value</a>
                                                <ul class="dropdown-menu">
                                                    @foreach (var purchasedMaterial in Model.AvailablePurchasedMaterials)
                                                    {
                                                        <li><a href="#" onclick="updateSelectedStatus(@status.Id, '@status.Value -> @purchasedMaterial.Value', -1, @purchasedMaterial.Id); event.preventDefault();">@purchasedMaterial.Value</a></li>
                                                    }
                                                </ul>
                                            </li>
                                        }
                                        else
                                        {
                                            <li><a href="#" onclick="updateSelectedStatus(@status.Id, '@status.Value', -1, -1); event.preventDefault();">@status.Value</a></li>
                                        }
                                    }
                                }
                            }
                        </ul>
                    </div>
                </div>
            </div>
            <button class="btn btn-success" onclick="submitLogEntry(this); event.preventDefault();">Spara</button>
        </div>
        <div class="col-md-6">
            <label for="log-function-chat-log">Tidigare kommunikation</label>
            <ul id="log-function-chat-log" class="list-group chat-container">
            @foreach (var logItem in Model.OrderItem.LogItemsList.AsEnumerable().Reverse())
            {
                if (logItem.Type == "LOG")
                {
                    <li class="list-group-item chat-item">
                        <span class="chat-item-message">@logItem.Message</span><br /><br />
                        <span class="chat-item-name-and-date">@logItem.MemberName - <span class="@(DateTime.Now.Date == logItem.CreateDate.Date ? "dynamic-time-diff" : "")" data-minutes="@(DateTime.Now.Date == logItem.CreateDate.Date ? (DateTime.Now - logItem.CreateDate).TotalMinutes : 0)">@logItem.CreateDate.ToPrettyString()</span></span><br />
                    </li>
                }
            }
            </ul>
        </div>
   </div>
    <script type="text/javascript">
    $(function () {
        $(".datetimepicker").datetimepicker({
            locale: "sv"
        });

        $("#log-function-chat-log").scrollTop($("#log-function-chat-log")[0].scrollHeight);
    });

    function updateSelectedStatus(newStatusId, newStatusText, cancellationReasonId, purchasedMaterialId) {
        var currSelectedStatusObj = $("#currently-selected-status");
        currSelectedStatusObj.data("status-id", newStatusId);
        currSelectedStatusObj.data("cancellation-reason-id", cancellationReasonId);
        currSelectedStatusObj.data("purchased-material-id", purchasedMaterialId);
        currSelectedStatusObj.text(newStatusText);
    }

    function submitLogEntry(obj) {
        var newStatusObj = $("#currently-selected-status");
        var newStatusId = -1;
        var newStatusCancellationReasonId = -1;
        var newStatusPurchasedMaterialId = -1;

        if (newStatusObj.length > 0) {
            newStatusId = newStatusObj.data("status-id");
            newStatusCancellationReasonId = newStatusObj.data("cancellation-reason-id");
            newStatusPurchasedMaterialId = newStatusObj.data("purchased-material-id");
        }

        writeLogItem(@Model.OrderItem.NodeId, obj.form.message.value, "LOG", obj.form.followUpDate.value, newStatusId, 
            newStatusCancellationReasonId, newStatusPurchasedMaterialId);
    }
    </script>
</form>
